@page "/admin"
@using AppRegShared
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
	<button @onclick="CheckPolicy">Check policy</button>

	<p>Policy Message: @policyMessage</p>

	<p>User: @userP</p>
	<p>Admin: @adminP</p>
	<p>Approver: @approverP</p>
	<p>Nav: @navP</p>

</MudContainer>



@code {
	private string policyMessage = "Check hasn't been made yet.";
	private string userP = "";
	private string adminP = "";
	private string approverP = "";
	private string navP = "";

	[CascadingParameter]
	private Task<AuthenticationState> authenticationStateTask { get; set; }

	private async void CheckPolicy()
	{
		try
		{
			var user = (await authenticationStateTask).User;

			bool admin = user.IsInRole(ApplicationRoles.AdminRole);
			bool approver = user.IsInRole(ApplicationRoles.ApproverRole);

			userP = (await AuthorizationService.AuthorizeAsync(user, Constants.Auth.UserPolicy)).Succeeded.ToString();
			adminP = (await AuthorizationService.AuthorizeAsync(user, Constants.Auth.AdminPolicy)).Succeeded.ToString();
			approverP = (await AuthorizationService.AuthorizeAsync(user, Constants.Auth.ApproverPolicy)).Succeeded.ToString();
			navP = (await AuthorizationService.AuthorizeAsync(user, Constants.Auth.DisplayNavigation)).Succeeded.ToString();
		}
		catch (Exception ex)
		{
			policyMessage = ex.Message;
		}
	}
}